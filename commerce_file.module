<?php

/**
 * @file
 * Hook implementations for the commerce file module.
 */

use Drupal\Core\Entity\EntityInterface;
use Drupal\Core\Session\AccountInterface;
use Drupal\Core\Access\AccessResult;

function commerce_file_entity_load(array $entities, $entity_type_id) {
  if ($entity_type_id !== 'commerce_product_variation') {
    return;
  }

  // Get media fields for product variation.
  foreach ($entities as $entity) {
    foreach ($entity->getFields() as $field_id => $field) {
      if ($field_id === 'field_downloadable_media') {
        $entity->{$field_id}->entity->product_variation = $entity;
      }
    }
  }
}

/**
 * Implements hook_entity_access().
 */
function commerce_file_entity_access(EntityInterface $entity, $operation, AccountInterface $account) {
  $user = \Drupal::entityTypeManager()->getStorage('user')->load($account->id());
  
  if ($entity->getEntityTypeId() !== 'media' || empty($entity->product_variation)) {
    return;
  }

  $license_type_plugin = $entity->product_variation->license_type->first()->getTargetInstance();
  $existing_rights_result = $license_type_plugin->checkUserHasExistingRights($user);

  return AccessResult::forbiddenIf(!($existing_rights_result->hasExistingRights()));
}

/**
 * Implements hook_file_download().
 */
function commerce_file_file_download($uri) {
}